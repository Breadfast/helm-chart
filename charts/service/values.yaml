# Default values for Breadfast Helm Chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: repo/image
  pullPolicy: IfNotPresent
  tag: ""
  # -- Overrides the image tag whose default is the chart appVersion.

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
# -- Provide node groups selector
nodeSelectorLabels: {}
deploymentLabels: {}

destinationRule:
  enabled: false
  trafficPolicy: {}

serviceAccount:
  # -- (bool) If true, creates service account
  create: false
  # The name of the service account to use.
  # -- If not set and create is true, a name is generated using the fullname template
  annotations: {}
  name: ""
  # -- Provide IAM Role ARN, if create is true.

## Pod annotations
##
podAnnotations: {}

podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}

service:
  # -- Service type, can be either `ClusterIP`, `NodePort`, `LoadBalancer` or `ExternalName`
  type: ClusterIP
  # -- Kubernetes service port when single port service
  port: 80
  targetPort: 80

extraService:
  enabled: false
  port: 9113
  targetPort: 9113
  type: ClusterIP
  portName: extraport


# -- (bool) If true, Creats Ingress DNS name to expose the service publicly
ingress:
  enabled: false

# -- (bool) If true, Creats Multible Ingresses DNS name to expose the service publicly
multiIngress:
  enabled: false

# We should always specify how much of each resource a container needs.
# https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
resources: {}

# The kubelet uses liveness probes to know when to restart a container.
# https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe: {}

# The kubelet uses startup probe to indicates whether the application within the container is started
# https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#when-should-you-use-a-startup-probe
startupProbe: {}

# The kubelet uses readiness probes to know when a container is ready to start accepting traffic.
# https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
readinessProbe: {}

# -- (map) Environment variable map
containerEnv: []

# -- (list) List of volumes to create
# -- To add GCP Bucket as volume, use the following format
# - name: volume-name
#   csi:
#     driver: gcsfuse.csi.storage.gke.io
#     volumeAttributes:
#       bucketName: gcp-bucket-name
#       mountOptions: "implicit-dirs"
#       gcsfuseLoggingSeverity: warning
volumes: []

# -- (list) List of volumes to attach
volumeMounts: []

# -- (bool) If true, add annotation o enable GCP Volume Mounts (GCSFuse)
gcpVolumeMounts:
  enabled: false

autoscaling:
  enabled: false

# -- (bool) If true, It will inject Vault Agent to get secrets from Vault
vaultAgent:
  enabled: false

# -- (bool) If true, Override to the Entrypoint
entrypointOverride:
  enabled: false

# -- Pod affinity rule. Default affinity rule is set to make sure pods are not deployed on the same node
podAffinity: {}
podAntiAffinity: {}

# -- (bool) If true, Creates CronJob resource
cronJob:
  create: false

# -- (bool) If true, Add datadog labels to pods and deployments
datadog:
  enabled: false

# -- Node Tolerations. Tolerations allow the scheduler to schedule pods with matching taints
nodeTolerations: []

argorollouts:
  enabled: false
  steps:
  - setWeight: 20
  - pause:
      duration: "1m"
  - setWeight: 60
  - pause: {}

# -- Specify deployment rolling strategy: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
rollingStrategy: RollingUpdate

pdb:
  enabled: false
  minAvailable: 60%

virtualService:
  enabled: false
  hosts: []
  http: {}
